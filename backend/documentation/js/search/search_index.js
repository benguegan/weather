var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.218,1,1.434]],["body/controllers/AppController.html",[0,1.52,1,1.791,2,1.096,3,0.795,4,0.673,5,0.673,6,1.861,7,0.565,8,2.129,9,3.271,10,2.357,11,1.535,12,0.062,13,2.357,14,3.271,15,1.096,16,2.357,17,1.535,18,1.535,19,1.535,20,3.204,21,1.535,22,3.271,23,1.535,24,0.795,25,1.861,26,2.357,27,0.934,28,0.795,29,0.38,30,1.861,31,2.357,32,2.357,33,2.357,34,1.535,35,1.535,36,2.357,37,0.04,38,0.04]],["title/modules/AppModule.html",[39,0.883,40,1.434]],["body/modules/AppModule.html",[1,1.936,2,1.406,3,0.711,4,0.602,5,0.602,12,0.061,24,1.378,27,0.836,28,0.711,29,0.34,37,0.037,38,0.037,39,1.192,40,2.329,41,0.981,42,0.981,43,1.373,44,1.373,45,0.981,46,1.373,47,1.373,48,1.666,49,1.666,50,1.978,51,1.969,52,1.373,53,1.373,54,2.11,55,2.388,56,2.11,57,1.373,58,1.969,59,2.11,60,2.11,61,2.11,62,2.11,63,2.11,64,2.11,65,2.11,66,2.11,67,2.11,68,2.11,69,2.11]],["title/classes/CoordinatesDTO.html",[29,0.422,70,0.883]],["body/classes/CoordinatesDTO.html",[3,0.888,4,0.752,5,0.752,7,0.631,12,0.058,15,1.64,24,0.888,28,0.888,29,0.568,37,0.043,38,0.043,70,1.189,71,1.715,72,2.08,73,1.64,74,2.969,75,3.141,76,3.141,77,1.189,78,3.355,79,2.634,80,2.634,81,2.634,82,2.634,83,2.634,84,2.08]],["title/classes/CoordinatesDTO-1.html",[29,0.357,34,1.444,70,0.748]],["body/classes/CoordinatesDTO-1.html",[3,0.795,4,0.673,5,0.673,7,0.565,11,2.129,12,0.061,15,1.52,24,0.795,28,1.103,29,0.38,37,0.04,38,0.04,70,1.103,71,1.535,73,1.52,75,3.204,76,3.204,77,1.266,78,3.483,85,1.535,86,3.271,87,3.271,88,2.357,89,3.271,90,2.357,91,3.756,92,1.535,93,1.291,94,2.129]],["title/controllers/WeatherController.html",[0,1.218,95,1.434]],["body/controllers/WeatherController.html",[0,0.785,2,0.785,3,0.569,4,0.482,5,0.482,7,0.405,8,1.671,11,1.671,12,0.061,15,1.193,17,1.671,18,1.671,19,1.671,21,1.671,24,1.169,25,2.027,27,0.669,28,0.569,29,0.272,35,1.671,37,0.032,38,0.032,70,1.169,74,1.1,77,0.865,92,1.1,93,1.405,95,1.405,96,1.334,97,1.69,98,1.69,99,3.927,100,3.105,101,2.027,102,1.69,103,4.081,104,1.69,105,1.69,106,2.567,107,1.69,108,1.69,109,1.69,110,1.69,111,1.69,112,1.69,113,1.69,114,1.69,115,1.69,116,1.334,117,1.229,118,1.334,119,1.69,120,1.69,121,1.69,122,2.567,123,2.567,124,3.105,125,2.567,126,1.69,127,1.69,128,1.69,129,1.69,130,1.69,131,1.69,132,1.69]],["title/modules/WeatherModule.html",[39,0.883,50,1.218]],["body/modules/WeatherModule.html",[2,1.52,3,0.795,4,0.673,5,0.673,12,0.06,24,1.368,27,0.934,28,0.795,29,0.38,37,0.04,38,0.04,39,1.266,41,1.096,42,1.096,43,1.535,44,1.535,45,1.096,46,2.445,47,1.535,50,2.05,51,2.129,52,1.535,53,1.535,55,1.861,95,2.057,117,1.747,118,1.861,133,1.861,134,1.861,135,2.357,136,2.357,137,3.271,138,1.535]],["title/injectables/WeatherService.html",[117,1.038,139,1.434]],["body/injectables/WeatherService.html",[3,0.482,4,0.408,5,0.408,7,0.343,8,1.469,12,0.061,15,1.605,17,1.469,18,1.469,19,1.469,21,1.469,23,2.065,24,1.295,27,0.566,28,0.482,29,0.23,30,1.781,35,1.469,37,0.028,38,0.028,57,0.931,70,1.069,73,1.049,74,2.5,77,0.942,93,0.783,101,2.505,116,1.129,117,0.893,138,0.931,139,1.235,140,1.43,141,1.129,142,3.98,143,3.172,144,2.794,145,2.256,146,1.43,147,3.669,148,3.841,149,2.256,150,2.256,151,1.43,152,2.794,153,1.43,154,1.129,155,1.129,156,1.781,157,2.256,158,1.43,159,2.256,160,1.43,161,1.129,162,1.43,163,1.129,164,1.43,165,1.43,166,1.43,167,1.43,168,1.43,169,1.43,170,1.43,171,1.43,172,1.43,173,1.43,174,1.43,175,1.43,176,1.43]],["title/coverage.html",[177,2.289]],["body/coverage.html",[0,1.52,1,1.291,5,0.673,6,1.861,12,0.059,29,0.527,37,0.04,38,0.04,39,0.795,45,1.096,58,1.535,70,1.103,72,1.861,77,0.795,85,1.535,95,1.291,96,1.861,117,0.934,139,1.291,141,1.861,156,1.861,177,1.535,178,2.357,179,2.357,180,2.357,181,1.861,182,3.756,183,4.683,184,4.057,185,2.357,186,1.861,187,1.861,188,2.129,189,2.357,190,3.756,191,2.357,192,2.357,193,2.357]],["title/dependencies.html",[42,1.457,194,1.752]],["body/dependencies.html",[12,0.062,27,1.002,29,0.553,37,0.042,38,0.042,42,1.176,57,1.647,84,1.997,92,1.647,138,1.647,161,1.997,163,1.997,195,2.529,196,2.529,197,2.529,198,2.529,199,3.897,200,2.529,201,2.529,202,2.529,203,2.529,204,2.529,205,2.529,206,2.529,207,2.529,208,2.529,209,2.529,210,2.529,211,3.433,212,2.529,213,2.529,214,2.529,215,2.529,216,2.529,217,2.529,218,2.529]],["title/miscellaneous/functions.html",[219,0.878,220,2.475]],["body/miscellaneous/functions.html",[7,0.856,12,0.053,37,0.053,38,0.053,45,2.13,188,2.324,219,1.414,220,2.819,221,2.819]],["title/index.html",[7,0.532,222,2.218,223,2.218]],["body/index.html",[4,0.562,12,0.059,37,0.035,38,0.035,94,1.281,177,1.281,224,1.968,225,1.968,226,2.877,227,1.968,228,1.968,229,1.968,230,1.968,231,1.968,232,1.968,233,3.399,234,1.968,235,1.968,236,1.968,237,1.968,238,3.399,239,4.291,240,1.968,241,1.968,242,1.968,243,4.155,244,1.968,245,1.968,246,2.877,247,1.968,248,1.968,249,1.968,250,1.968,251,2.877,252,2.877,253,1.968,254,1.968,255,1.968,256,2.877,257,2.877,258,1.968,259,1.968,260,1.968,261,1.968,262,1.968,263,1.554,264,1.968,265,1.968,266,1.968,267,1.968,268,1.968,269,1.968,270,1.968,271,1.968,272,1.968,273,1.968,274,1.554,275,1.968,276,1.968,277,1.968,278,1.968,279,1.968,280,1.968,281,1.554]],["title/modules.html",[41,1.634]],["body/modules.html",[12,0.052,37,0.052,38,0.052,40,1.901,41,1.614,50,1.614,263,3.323,282,4.209,283,4.209,284,4.209]],["title/overview.html",[285,2.776]],["body/overview.html",[2,1.296,12,0.053,34,1.815,37,0.045,38,0.045,39,0.94,40,2.379,41,1.296,42,1.296,43,1.815,44,1.815,45,1.296,46,1.815,47,1.815,48,2.201,49,2.201,50,2.098,51,2.385,52,1.815,53,1.815,71,1.815,117,1.62,133,2.201,134,2.201,139,1.526,285,2.201,286,4.092]],["title/properties.html",[73,1.457,194,1.752]],["body/properties.html",[12,0.06,20,2.742,37,0.052,38,0.052,73,1.614,94,2.261,274,2.742,281,2.742,287,3.473,288,3.473]],["title/miscellaneous/typealiases.html",[219,0.878,289,3.135]],["body/miscellaneous/typealiases.html",[7,0.84,12,0.052,37,0.052,38,0.052,77,1.427,85,2.282,93,2.317,219,1.388,290,3.505,291,3.505,292,3.505]],["title/miscellaneous/variables.html",[219,0.878,293,2.475]],["body/miscellaneous/variables.html",[7,0.694,12,0.061,23,1.884,37,0.046,38,0.046,39,1.265,58,2.444,77,1.265,154,2.964,155,2.964,181,2.285,186,2.285,187,2.964,188,1.884,219,1.146,221,2.285,293,2.285,294,2.894,295,2.894,296,2.894,297,2.894,298,2.894]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":287,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":34,"title":{"classes/CoordinatesDTO-1.html":{}},"body":{"controllers/AppController.html":{},"overview.html":{}}}],["1.0.0",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":286,"title":{},"body":{"overview.html":{}}}],["2.2.2",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["7.3.1",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":290,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":264,"title":{},"body":{"index.html":{}}}],["apicreatedresponse",{"_index":113,"title":{},"body":{"controllers/WeatherController.html":{}}}],["apiforbiddenresponse",{"_index":114,"title":{},"body":{"controllers/WeatherController.html":{}}}],["apiproperty",{"_index":91,"title":{},"body":{"classes/CoordinatesDTO-1.html":{}}}],["apiproperty({description",{"_index":86,"title":{},"body":{"classes/CoordinatesDTO-1.html":{}}}],["apitags",{"_index":115,"title":{},"body":{"controllers/WeatherController.html":{}}}],["apitags('weather",{"_index":119,"title":{},"body":{"controllers/WeatherController.html":{}}}],["app",{"_index":241,"title":{},"body":{"index.html":{}}}],["app.config",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["app.controller",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":232,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":40,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":99,"title":{},"body":{"controllers/WeatherController.html":{}}}],["author",{"_index":274,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":125,"title":{},"body":{"controllers/WeatherController.html":{}}}],["axios",{"_index":161,"title":{},"body":{"injectables/WeatherService.html":{},"dependencies.html":{}}}],["axioserror",{"_index":159,"title":{},"body":{"injectables/WeatherService.html":{}}}],["axiosresponse",{"_index":160,"title":{},"body":{"injectables/WeatherService.html":{}}}],["backers",{"_index":265,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":284,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules.html":{}}}],["building",{"_index":227,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":162,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((err",{"_index":171,"title":{},"body":{"injectables/WeatherService.html":{}}}],["class",{"_index":29,"title":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":71,"title":{},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_weathermodule",{"_index":133,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_providers",{"_index":134,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["common/constant",{"_index":165,"title":{},"body":{"injectables/WeatherService.html":{}}}],["configmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":148,"title":{},"body":{"injectables/WeatherService.html":{}}}],["console.log(data",{"_index":127,"title":{},"body":{"controllers/WeatherController.html":{}}}],["const",{"_index":123,"title":{},"body":{"controllers/WeatherController.html":{}}}],["constant",{"_index":164,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constant.weatherendpoint}?lat=${coordinates.lat}&lon=${coordinates.lon}&appid=${this.weatherapikey",{"_index":169,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpservice",{"_index":146,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"controllers/WeatherController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/WeatherController.html":{}},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"coverage.html":{}}}],["controller('weather",{"_index":120,"title":{},"body":{"controllers/WeatherController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["coordinates",{"_index":93,"title":{},"body":{"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{},"miscellaneous/typealiases.html":{}}}],["coordinates.dto",{"_index":116,"title":{},"body":{"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["coordinatesdto",{"_index":70,"title":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{}},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["coverage",{"_index":177,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["data",{"_index":124,"title":{},"body":{"controllers/WeatherController.html":{}}}],["declarations",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{}}}],["default",{"_index":154,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":42,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":94,"title":{},"body":{"classes/CoordinatesDTO-1.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":242,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":253,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":228,"title":{},"body":{"index.html":{}}}],["error",{"_index":174,"title":{},"body":{"injectables/WeatherService.html":{}}}],["example",{"_index":238,"title":{},"body":{"index.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["express",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["framework",{"_index":226,"title":{},"body":{"index.html":{}}}],["frontend/build",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":220,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/docs",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/docs')@redirect('/api/docs/v1",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/hello",{"_index":129,"title":{},"body":{"controllers/WeatherController.html":{}}}],["get('/hello')@httpcode(httpstatus.ok",{"_index":108,"title":{},"body":{"controllers/WeatherController.html":{}}}],["get()@httpcode(httpstatus.ok",{"_index":104,"title":{},"body":{"controllers/WeatherController.html":{}}}],["getcurrent",{"_index":145,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrent(coordinates",{"_index":150,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrentweather",{"_index":100,"title":{},"body":{"controllers/WeatherController.html":{}}}],["getcurrentweather(coordinates",{"_index":102,"title":{},"body":{"controllers/WeatherController.html":{}}}],["getdocs",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["getdocs(@query('version",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["getdocs(version",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":101,"title":{},"body":{"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["gethello(@res",{"_index":130,"title":{},"body":{"controllers/WeatherController.html":{}}}],["gethello(res",{"_index":107,"title":{},"body":{"controllers/WeatherController.html":{}}}],["getting",{"_index":222,"title":{"index.html":{}},"body":{}}],["grow",{"_index":260,"title":{},"body":{"index.html":{}}}],["hello",{"_index":176,"title":{},"body":{"injectables/WeatherService.html":{}}}],["here",{"_index":271,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":111,"title":{},"body":{"controllers/WeatherController.html":{}}}],["httpcode(httpstatus.ok",{"_index":122,"title":{},"body":{"controllers/WeatherController.html":{}}}],["httpmodule",{"_index":137,"title":{},"body":{"modules/WeatherModule.html":{}}}],["https://api.openweathermap.org/data/2.5/weather",{"_index":298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://docs.nestjs.com/v5",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["https://nestjs.com",{"_index":278,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":147,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpstatus",{"_index":112,"title":{},"body":{"controllers/WeatherController.html":{}}}],["identifier",{"_index":179,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["injectable",{"_index":139,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/WeatherService.html":{}}}],["installation",{"_index":237,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":240,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":81,"title":{},"body":{"classes/CoordinatesDTO.html":{}}}],["isint",{"_index":82,"title":{},"body":{"classes/CoordinatesDTO.html":{}}}],["isstring",{"_index":83,"title":{},"body":{"classes/CoordinatesDTO.html":{}}}],["join",{"_index":267,"title":{},"body":{"index.html":{}}}],["join(__dirname",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["kamil",{"_index":275,"title":{},"body":{"index.html":{}}}],["lat",{"_index":75,"title":{},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{}}}],["latitude",{"_index":87,"title":{},"body":{"classes/CoordinatesDTO-1.html":{}}}],["legend",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["license",{"_index":281,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":257,"title":{},"body":{"index.html":{}}}],["literal",{"_index":292,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":143,"title":{},"body":{"injectables/WeatherService.html":{}}}],["logger(weatherservice.name",{"_index":157,"title":{},"body":{"injectables/WeatherService.html":{}}}],["lon",{"_index":76,"title":{},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{}}}],["longitude",{"_index":89,"title":{},"body":{"classes/CoordinatesDTO-1.html":{}}}],["manager",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["miscellaneous",{"_index":219,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":256,"title":{},"body":{"index.html":{}}}],["mode",{"_index":246,"title":{},"body":{"index.html":{}}}],["module",{"_index":39,"title":{"modules/AppModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":41,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":270,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":276,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["nest",{"_index":233,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":280,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":138,"title":{},"body":{"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":92,"title":{},"body":{"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"dependencies.html":{}}}],["new",{"_index":156,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["node.js",{"_index":225,"title":{},"body":{"index.html":{}}}],["number",{"_index":78,"title":{},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{}}}],["observable",{"_index":152,"title":{},"body":{"injectables/WeatherService.html":{}}}],["occured",{"_index":175,"title":{},"body":{"injectables/WeatherService.html":{}}}],["open",{"_index":258,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["overview",{"_index":285,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":194,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["passport",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":170,"title":{},"body":{"injectables/WeatherService.html":{}}}],["please",{"_index":268,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":97,"title":{},"body":{"controllers/WeatherController.html":{}}}],["private",{"_index":142,"title":{},"body":{"injectables/WeatherService.html":{}}}],["process.env.weather_api",{"_index":297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":248,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":224,"title":{},"body":{"index.html":{}}}],["project",{"_index":259,"title":{},"body":{"index.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/WeatherController.html":{}}}],["properties",{"_index":73,"title":{"properties.html":{}},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"injectables/WeatherService.html":{},"properties.html":{}}}],["providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["query",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{}}}],["read",{"_index":269,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/CoordinatesDTO.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["redirect",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect('/api/docs/v1",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":236,"title":{},"body":{"index.html":{}}}],["res",{"_index":103,"title":{},"body":{"controllers/WeatherController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":132,"title":{},"body":{"controllers/WeatherController.html":{}}}],["res.status(httpstatus.ok).json(data",{"_index":128,"title":{},"body":{"controllers/WeatherController.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["results",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{}}}],["rootpath",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":243,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":163,"title":{},"body":{"injectables/WeatherService.html":{},"dependencies.html":{}}}],["scalable",{"_index":229,"title":{},"body":{"index.html":{}}}],["server",{"_index":230,"title":{},"body":{"index.html":{}}}],["servestaticmodule.forroot",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":231,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sponsors",{"_index":262,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constant.ts",{"_index":295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":221,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../weather.type.ts",{"_index":291,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.config.ts",{"_index":181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/constant.ts",{"_index":186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/weather/coordinates.dto.ts",{"_index":72,"title":{},"body":{"classes/CoordinatesDTO.html":{},"coverage.html":{}}}],["src/weather/coordinates.dto.ts:4",{"_index":79,"title":{},"body":{"classes/CoordinatesDTO.html":{}}}],["src/weather/coordinates.dto.ts:6",{"_index":80,"title":{},"body":{"classes/CoordinatesDTO.html":{}}}],["src/weather/weather.controller.ts",{"_index":96,"title":{},"body":{"controllers/WeatherController.html":{},"coverage.html":{}}}],["src/weather/weather.controller.ts:24",{"_index":105,"title":{},"body":{"controllers/WeatherController.html":{}}}],["src/weather/weather.controller.ts:35",{"_index":109,"title":{},"body":{"controllers/WeatherController.html":{}}}],["src/weather/weather.module.ts",{"_index":135,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/weather/weather.service.ts",{"_index":141,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/weather/weather.service.ts:11",{"_index":158,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/weather/weather.service.ts:12",{"_index":149,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/weather/weather.service.ts:21",{"_index":151,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/weather/weather.service.ts:34",{"_index":153,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/weather/weather.type.ts",{"_index":85,"title":{},"body":{"classes/CoordinatesDTO-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/weather/weather.type.ts:10",{"_index":90,"title":{},"body":{"classes/CoordinatesDTO-1.html":{}}}],["src/weather/weather.type.ts:7",{"_index":88,"title":{},"body":{"classes/CoordinatesDTO-1.html":{}}}],["start",{"_index":244,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":247,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":249,"title":{},"body":{"index.html":{}}}],["started",{"_index":223,"title":{"index.html":{}},"body":{}}],["starter",{"_index":235,"title":{},"body":{"index.html":{}}}],["statements",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":272,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":263,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":283,"title":{},"body":{"modules.html":{}}}],["table",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":252,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":255,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":254,"title":{},"body":{"index.html":{}}}],["tests",{"_index":251,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":261,"title":{},"body":{"index.html":{}}}],["this.configservice.get('weather_api_key",{"_index":167,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpservice",{"_index":168,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.logger.error(err.response.data",{"_index":172,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weatherapikey",{"_index":166,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weatherservice.getcurrent(coordinates",{"_index":126,"title":{},"body":{"controllers/WeatherController.html":{}}}],["this.weatherservice.gethello",{"_index":131,"title":{},"body":{"controllers/WeatherController.html":{}}}],["throw",{"_index":173,"title":{},"body":{"injectables/WeatherService.html":{}}}],["touch",{"_index":273,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":279,"title":{},"body":{"index.html":{}}}],["type",{"_index":77,"title":{},"body":{"classes/CoordinatesDTO.html":{},"classes/CoordinatesDTO-1.html":{},"controllers/WeatherController.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":289,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":234,"title":{},"body":{"index.html":{}}}],["unit",{"_index":250,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":110,"title":{},"body":{"controllers/WeatherController.html":{}}}],["unlicensed",{"_index":288,"title":{},"body":{"properties.html":{}}}],["url",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["validator",{"_index":84,"title":{},"body":{"classes/CoordinatesDTO.html":{},"dependencies.html":{}}}],["value",{"_index":155,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":293,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"properties.html":{}}}],["watch",{"_index":245,"title":{},"body":{"index.html":{}}}],["weather",{"_index":98,"title":{},"body":{"controllers/WeatherController.html":{}}}],["weather.controller",{"_index":136,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather.service",{"_index":118,"title":{},"body":{"controllers/WeatherController.html":{},"modules/WeatherModule.html":{}}}],["weather/weather.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherapi",{"_index":296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weatherapikey",{"_index":144,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weathercontroller",{"_index":95,"title":{"controllers/WeatherController.html":{}},"body":{"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["weatherendpoint",{"_index":187,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathermodule",{"_index":50,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":117,"title":{"injectables/WeatherService.html":{}},"body":{"controllers/WeatherController.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["website",{"_index":277,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":239,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":266,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getDocs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getDocs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDocs(version)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/docs')@Redirect('/api/docs/v1', 302)\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { url: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Redirect } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Get('/docs')\n  @Redirect('/api/docs/v1', 302)\n  getDocs(@Query('version') version) {\n    if (version && version === '1') {\n      return { url: 'https://docs.nestjs.com/v5/' };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WeatherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { appConfig } from './app.config';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ load: [appConfig], isGlobal: true }),\n    WeatherModule,\n    // ServeStaticModule.forRoot({\n    //   rootPath: join(__dirname, '../../frontend/build'),\n    // }),\n  ],\n  controllers: [AppController],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoordinatesDTO.html":{"url":"classes/CoordinatesDTO.html","title":"class - CoordinatesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoordinatesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather/coordinates.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                lon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/weather/coordinates.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/weather/coordinates.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIn, IsInt, IsString } from 'class-validator';\n\nexport class CoordinatesDTO {\n  readonly lat: number;\n\n  readonly lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoordinatesDTO-1.html":{"url":"classes/CoordinatesDTO-1.html","title":"class - CoordinatesDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoordinatesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather/weather.type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                lat\n                            \n                            \n                                    \n                                lon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'latitude'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather/weather.type.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'longitude'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/weather/weather.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport type Coordinates = { lat: number; lon: number };\n\nexport class CoordinatesDTO {\n  @ApiProperty({ description: 'latitude' })\n  lat: number;\n\n  @ApiProperty({ description: 'longitude' })\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WeatherController.html":{"url":"controllers/WeatherController.html","title":"controller - WeatherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WeatherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather/weather.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                weather\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getCurrentWeather\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getCurrentWeather\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentWeather(coordinates: CoordinatesDTO, res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/weather/weather.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coordinates\n                                            \n                                                            CoordinatesDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello(res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/hello')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/weather/weather.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport {\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CoordinatesDTO } from './coordinates.dto';\nimport { WeatherService } from './weather.service';\n\n@ApiTags('weather')\n@Controller('weather')\nexport class WeatherController {\n  constructor(private readonly weatherService: WeatherService) {}\n\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  async getCurrentWeather(\n    @Query() coordinates: CoordinatesDTO,\n    @Res() res: any,\n  ): Promise {\n    const data = await this.weatherService.getCurrent(coordinates);\n    console.log(data);\n    return res.status(HttpStatus.OK).json(data);\n  }\n\n  @Get('/hello')\n  @HttpCode(HttpStatus.OK)\n  async getHello(@Res() res: any) {\n    const data = await this.weatherService.getHello();\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/weather/weather.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WeatherController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WeatherController } from './weather.controller';\nimport { WeatherService } from './weather.service';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [HttpModule],\n  controllers: [WeatherController],\n  providers: [WeatherService],\n})\nexport class WeatherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/weather/weather.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                weatherApiKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrent\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/weather/weather.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrent\n                        \n                    \n                \n            \n            \n                \ngetCurrent(coordinates: CoordinatesDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/weather/weather.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coordinates\n                                            \n                                                            CoordinatesDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/weather/weather.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WeatherService.name)\n                    \n                \n                    \n                        \n                                Defined in src/weather/weather.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        weatherApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/weather/weather.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { Observable, catchError } from 'rxjs';\nimport * as constant from '../common/constant';\nimport { CoordinatesDTO } from './coordinates.dto';\n\n@Injectable()\nexport class WeatherService {\n  private readonly logger = new Logger(WeatherService.name);\n  private readonly weatherApiKey: string;\n\n  constructor(\n    private readonly httpService: HttpService,\n    private configService: ConfigService,\n  ) {\n    this.weatherApiKey = this.configService.get('WEATHER_API_KEY');\n  }\n\n  getCurrent(coordinates: CoordinatesDTO): Observable> {\n    return this.httpService\n      .get(\n        `${constant.weatherEndpoint}?lat=${coordinates.lat}&lon=${coordinates.lon}&appid=${this.weatherApiKey}`,\n      )\n      .pipe(\n        catchError((err: AxiosError) => {\n          this.logger.error(err.response.data);\n          throw 'An error occured!';\n        }),\n      );\n  }\n\n  getHello(): string {\n    return 'Hello!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/constant.ts\n            \n            variable\n            weatherEndpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/weather/coordinates.dto.ts\n            \n            class\n            CoordinatesDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/weather/weather.controller.ts\n            \n            controller\n            WeatherController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/weather/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/weather/weather.type.ts\n            \n            class\n            CoordinatesDTO\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.1\n        \n            axios : ^1.7.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Coordinates   (src/.../weather.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/weather/weather.type.ts\n    \n    \n        \n            \n                \n                    \n                    Coordinates\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            weatherEndpoint   (src/.../constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n  weatherAPI: process.env.WEATHER_API,\n})\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/common/constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        weatherEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.openweathermap.org/data/2.5/weather'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
